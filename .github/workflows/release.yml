name: Release Pipeline

on:
  push:
    tags:
      - 'v*'

jobs:
  create-release:
    name: Create Release
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run all tests
        run: |
          npm run test:unit
          npm run test:integration

      - name: Build application
        run: npm run build

      - name: Generate changelog
        id: changelog
        uses: TriPSs/conventional-changelog-action@v5
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          skip-version-file: true
          output-file: false

      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          body: ${{ steps.changelog.outputs.clean_changelog }}
          files: |
            dist/**/*
          generate_release_notes: true

      - name: Publish to npm (if applicable)
        if: contains(github.ref, 'refs/tags/v')
        run: |
          echo "//registry.npmjs.org/:_authToken=${{ secrets.NPM_TOKEN }}" > ~/.npmrc
          npm publish --access public
        continue-on-error: true

      - name: Deploy to Production
        uses: amondnet/vercel-action@v25
        with:
          vercel-token: ${{ secrets.VERCEL_TOKEN }}
          vercel-org-id: ${{ secrets.VERCEL_ORG_ID }}
          vercel-project-id: ${{ secrets.VERCEL_PROJECT_ID }}
          vercel-args: '--prod'
          vercel-prod: true

      - name: Notify release
        uses: 8398a7/action-slack@v3
        with:
          status: success
          text: |
            üöÄ New Release: ${{ github.ref_name }}
            üìù Changelog: ${{ steps.changelog.outputs.clean_changelog }}
            üîó URL: https://github.com/${{ github.repository }}/releases/tag/${{ github.ref_name }}
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}